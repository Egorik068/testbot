import telebot
import re
import config
import os
import traceback
import requests
from bs4 import BeautifulSoup as BS
from pathlib import Path

bot = telebot.TeleBot(config.token)

#

@bot.message_handler(content_types=['new_chat_members'])
def delete_jf(message):
    bot.delete_message(message.chat.id, message.message_id)
    usbn = message.from_user.id
    with open('USERS.txt', 'a') as new_users:
        new_users.write(str(usbn) + "\n")
    with open('BANS.txt', 'r') as banned:
        users_ban = banned.read()
    bot.kick_chat_member(message.chat.id, users_ban)

#

@bot.message_handler(commands=['ban'])
def bans(message):
    banik = message.text
    uimb = message.from_user.id
    adm = bot.get_chat_member(chat_id=message.chat.id, user_id=message.from_user.id)
    adm = adm.status
    if adm == "creator" or adm == "administrator":
        if message.reply_to_message:
            chat_ids = message.reply_to_message.from_user.id
            tt = message.text
            id_ban = message.reply_to_message.from_user.id
            bot.ban_chat_member(message.chat.id, id_ban, 222222222222222222)
            with open('BANS.txt', 'a') as banned:
                    banned.write(str(id_ban) + "\n")
        if message.reply_to_message is None:
            return bot.reply_to(message, "–í–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ª—é–¥–∏–Ω–∏, —è–∫—É —Ö–æ—á–µ—Ç–µ –∑–∞–±–∞–Ω–∏—Ç–∏ :)")
    else:
        bot.reply_to(message, "–í —Ç–µ–±–µ –Ω–µ–º–∞ –ø—Ä–∞–≤ –±–∞–Ω–∏—Ç–∏ –ª—é–¥–µ–π :(")

#

@bot.message_handler(commands=['kick'])
def adm (message):
           adm = bot.get_chat_member(chat_id=message.chat.id, user_id=message.from_user.id)
           adm = adm.status
           if adm == "creator" or adm == "administrator":
               if message.reply_to_message:
                   id_kik = message.reply_to_message.from_user.id
                   bot.kick_chat_member(message.chat.id, id_kik)
               else:
                    bot.reply_to(message, "–í–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ª—é–¥–∏–Ω–∏, —è–∫—É —Ö–æ—á–µ—Ç–µ –∫—ñ–∫–Ω—É—Ç–∏ :)")
           else:
               bot.reply_to(message, "–í —Ç–µ–±–µ –Ω–µ–º–∞ –ø—Ä–∞–≤ –≤–∏–≥–∞–Ω—è—Ç–∏ –ª—é–¥–µ–π :(")

#

@bot.message_handler(content_types=['text'])
def msg(message):
    if message.text == '–†–ü':
        bot.reply_to(message, '''
–≤ –Ω–∞—Å —î —Ç–∞–∫—ñ –∫–æ–º–∞–Ω–¥–∏ —è–∫:
/kick - –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤ —á–∞—Ç—É
/ban - –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤ —á–∞—Ç—É
—ñ –≤—Å—è–∫—ñ –ø—Ä–∏–∫–æ–ª—é—Ö–∏ –ø–æ —Ç–∏–ø—É:
1)–≤–¥–∞—Ä–∏—Ç–∏  10)—É—î–±–∞—Ç–∏
2)–æ–±–ª–∏–∑–∞—Ç–∏  11)–æ–±—ñ—Å—Ä–∞—Ç–∏
3)–ø–æ–∫–æ—Ä–º–∏—Ç–∏  12)–≤–∏—î–±–∞—Ç–∏
4)–æ–±–Ω—è—Ç–∏
5)–∑—ó—Å—Ç–∏
6)–≤–∫—É—Å–∏—Ç–∏
7)–≤–±–∏—Ç–∏
8)–∫–∞—Å—Ç—Ä—É–≤–∞—Ç–∏
9)–ø–æ–≥–ª–∞–¥–∏—Ç–∏
–©–µ —É –Ω–∞—Å —î —É–Ω—ñ–∫–∞–ª—å–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –∑–∞–≤–¥—è–∫–∏ —è–∫—ñ–π –≤–∏ –º–æ–∂–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø–æ–≥–æ–¥—É –≤ —Å–≤–æ–º—É –º—ñ—Å—Ç—ñ!!
–ü–æ–≥–æ–¥–∞ —ñ –≤–∞—à–µ –º—ñ—Å—Ç–æ :)
–ø—Ä–∏–∫–ª–∞–¥: –ü–æ–≥–æ–¥–∞ –ª—å–≤—ñ–≤
        ''')
    if message.reply_to_message:
            a = message.from_user.first_name
            b = message.from_user.id
            d = message.reply_to_message.from_user.id
            c = message.reply_to_message.from_user.first_name

            if message.text.lower() == "–≤–¥–∞—Ä–∏—Ç–∏":
                bot.send_message(message.chat.id, f"üòµ‚Äçüí´ü•ä| [{a}](tg://user?id={b}) –≤–¥–∞—Ä–∏–≤ [{c}](tg://user?id={d})", parse_mode='Markdown')

            if message.text.lower() == "–æ–±–ª–∏–∑–∞—Ç–∏":
                bot.send_message(message.chat.id, f"üòãü§§| [{a}](tg://user?id={b}) –æ–±–ª–∏–∑–∞–≤ [{c}](tg://user?id={d})", parse_mode='Markdown')

            if message.text.lower() == "–ø–æ–∫–æ—Ä–º–∏—Ç–∏":
                bot.send_message(message.chat.id, f"üç™ü•û| [{a}](tg://user?id={b}) –ø–æ–∫–æ—Ä–º–∏–≤ [{c}](tg://user?id={d})", parse_mode='Markdown')

            if message.text.lower() == "–æ–±–Ω—è—Ç–∏":
                bot.send_message(message.chat.id, f"‚ò∫Ô∏èü§ó| [{a}](tg://user?id={b}) –æ–±–Ω—è–≤ [{c}](tg://user?id={d})", parse_mode='Markdown')

            if message.text.lower() == "–∑—ó—Å—Ç–∏":
                bot.send_message(message.chat.id, f"üë©‚Äçüç≥ü¶É| [{a}](tg://user?id={b}) –∑'—ó–≤ [{c}](tg://user?id={d})", parse_mode='Markdown')

            if message.text.lower() == "–≤–∫—É—Å–∏—Ç–∏":
                bot.send_message(message.chat.id, f"ü§®üò¨| [{a}](tg://user?id={b}) –≤–∫—É—Å–∏–≤ [{c}](tg://user?id={d})", parse_mode='Markdown')

            if message.text.lower() == "–≤–±–∏—Ç–∏":
                bot.send_message(message.chat.id, f"üò°üî™| [{a}](tg://user?id={b}) –≤–±–∏–≤ [{c}](tg://user?id={d})", parse_mode='Markdown')

            if message.text.lower() == "–∫–∞—Å—Ç—Ä—É–≤–∞—Ç–∏":
                bot.send_message(message.chat.id, f"ü•öüê£| [{a}](tg://user?id={b}) –∫–∞—Å—Ç—Ä—É–≤–∞–≤ [{c}](tg://user?id={d})", parse_mode='Markdown')

            if message.text.lower() == "–ø–æ–≥–ª–∞–¥–∏—Ç–∏":
                bot.send_message(message.chat.id, f"ü•∞‚ò∫Ô∏è| [{a}](tg://user?id={b}) –ø–æ–≥–ª–∞–¥–∏–≤ [{c}](tg://user?id={d})", parse_mode='Markdown')

            if message.text.lower() == "—É—î–±–∞—Ç–∏":
                bot.send_message(message.chat.id, f"üò°üëä| [{a}](tg://user?id={b}) —É—î–±–∞–≤ [{c}](tg://user?id={d})", parse_mode='Markdown')

            if message.text.lower() == "–æ–±—ñ—Å—Ä–∞—Ç–∏":
                bot.send_message(message.chat.id, f"ü§≠üí©| [{a}](tg://user?id={b}) –æ–±—ñ—Å—Ä–∞—Ç–∏ [{c}](tg://user?id={d})", parse_mode='Markdown')

            if message.text.lower() == "–≤–∏—î–±–∞—Ç–∏":
                bot.send_message(message.chat.id, f"üëâüëåüò¨| [{a}](tg://user?id={b}) –∑–º—É—Å–∏–≤ –¥–æ –∂–æ—Ä—Å—Ç–∫–æ–≥–æ —ñ–Ω—Ç–∏–º—É [{c}](tg://user?id={d})", parse_mode='Markdown')

    text = message.text
    adms = bot.get_chat_member(chat_id=message.chat.id, user_id=message.from_user.id)
    adms = adms.status
    if adms == "creator" or adms == "administrator":
        if message.reply_to_message:
            if message.text == '–†–æ–∑–±–∞–Ω':
                reprosban = message.reply_to_message.id
                Path('BANS.txt').write_text(Path('BANS.txt').read_text().replace('5120511081', ''))
                bot.reply_to(message, '–Æ–∑–µ—Ä —Ä–æ–∑–±–∞–Ω–µ–Ω–∏–π!')

#–ß–µ–∫ —á–∏ —î —É –Ω–∞—Å –ø–æ—Ä—É—à–Ω–∏–∫–∏

        if message.text == '–ß–µ–∫':
            with open('BANS.txt', 'r') as banned:
                users_ban = banned.read()
            bot.kick_chat_member(message.chat.id, users_ban)


    if message.text.lower() == '–ø–æ–≥–æ–¥–∞':
        bot.reply_to(message, '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –º—ñ—Å—Ç–æ, –ø–æ–≥–æ–¥—É —É —è–∫–æ–º—É –≤–∏ —Ö–æ—á–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è')

    else:

           #–ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è

        city = message.text
        split = city.split()
        city_ok = '-'.join(split)

           #–ó–∞–ø—Ä–æ—Å

        url = 'https://ua.sinoptik.ua/–ø–æ–≥–æ–¥–∞-' + city_ok
        r = requests.get(url)
        html = BS(r.content, 'html.parser')

          #–ü–æ—à—É–∫

        for el in html.select('#content'):
            t_min = el.select('.temperature .min')[0].text
            t_max = el.select('.temperature .max')[0].text
            text = el.select('.wDescription .description')[0].text

           #–ê–Ω—Ç–∏–∫—Ä–∞—à

        valid = requests.get(url)

        if '–ü–æ–≥–æ–¥–∞' in message.text:
            if valid:
                bot.reply_to(message, text + '\n \n' + "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + t_min + ", " + t_max)
            else:
                bot.reply_to(message, "–í–∏–±–∞—á—Ç–µ, –∞–ª–µ —è –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –º—ñ—Å—Ç–∞ :(")


bot.polling(none_stop=True)
